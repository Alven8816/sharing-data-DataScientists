Volume(EUtilsGet(res2)
)
Affiliation(EUtilsGet(res2))
library(ggplot2)
y <- YearPubmed(EUtilsGet(res))
table(y)
res <- EUtilsSummary("Meta analysis[ti]",type = "esearch",db="pubmed",mindate= 2000,maxdate=2015)
summary(res)
eachyear<- array()
x <- 1
for (i in 2000:2015){
Sys.sleep(1)
r <- EUtilsSummary('Meta analysis[ti]', type='esearch', db='pubmed', mindate=i, maxdate=i)
eachyear[x] <- QueryCount(r)
x <- x + 1
}
table(eachyear)
date()
count<-table(eachyear)
count
count<-as.data.frame(count)
count
names(count)<-c("Year", "Counts")
count
names(eachyear) <- 2000:2015
names(eachyear) <- 2000:2015
eachyear
count<-table(eachyear)
count
count<-as.data.frame(count)
count
count<-as.data.frame(eachyear)
count
names(count)<-c("Year", "Counts")
eachyear
data.frame(eachyear)
year <- row.names(eachyear)
year
year<- 2000:2015
eachyear<- array()
x <- 1
for (i in 2000:2015){
Sys.sleep(1)
r <- EUtilsSummary('Meta analysis[ti]', type='esearch', db='pubmed', mindate=i, maxdate=i)
eachyear[x] <- QueryCount(r)
x <- x + 1
}
count<-data.frame(year,eachyear)
View(count)
names(count)<-c("Year", "Counts")
num <- data.frame(Year=count$Year, Counts=cumsum(count$Counts))
num
num$g <- "g"
names(num) <- c("Year", "Counts", "g")
num
q <- qplot(x=Year, y=Counts, data=count, geom="bar", stat="identity")
q <- q + ggtitle(paste("PubMed articles containing \'", g,            "\' ", "= ", max(num$Counts), sep="")) +
ylab("Number of articles") +
xlab(paste("Year \n Query date: ", Sys.time(), sep="")) +
labs(colour="") +
theme_bw()
q <- qplot(x=Year, y=Counts, data=count, geom="bar", stat="identity")
q <- q + ggtitle(Number of PubMed articles \n which its title containing Meta analysis) +
ylab("Number of articles") +
xlab(paste("Year \n Query date: ", Sys.time(), sep="")) +
labs(colour="") +
theme_bw()
q
year<- 2000:2015
max(eachyear)
count<-data.frame(year,eachyear)
barplot(eachyear, las=2, ylim=c(0,10000), main="Number of PubMed articles \n which its title containing Meta analysis")
affs<- array()
outcome <- array()
x <- 1
for (i in 2000:2015){
Sys.sleep(1)
r <- EUtilsSummary('Meta analysis[ti]', type='esearch', db='pubmed', mindate=i, maxdate=i)
affs[x] <- ifelse("china" %in% Affiliation(EUtilsGet(r)) , 1,0)
outcome[x] <- sum(affs[x])
x <- x + 1
}
outcome
affs
aff <- Affiliation(EUtilsGet(res2))
res2 <- EUtilsSummary("Wenhua Yu",type = "esearch",db = "pubmed",
mindate = "2014",maxdate = "2014")
aff <- Affiliation(EUtilsGet(res2))
ifelse("china" %in% aff,1,0)
"china" %in% aff
aff
match("china",aff)
match("china",aff[1])
"china" %in% aff[1]
aff[1]
"China" %in% aff[1]
"China." %in% aff[1]
"of" %in% aff[1]
"Chinese" %in% aff[1]
aff
gregexpr("China",aff[1])
grepl("China",aff[1])
grepl("China",aff)
grep("China",aff)
grepl("China",aff)
sum(grepl("China",aff))
ifelse(grepl("China",aff),1,0)
affs<- array()
x <- 1
for (i in 2000:2015){
Sys.sleep(1)
r <- EUtilsSummary('Meta analysis[ti]', type='esearch', db='pubmed', mindate=i, maxdate=i)
affs[x] <- sum(grepl("China",Affiliation(EUtilsGet(r))))
x <- x + 1
}
affs
data<-data.frame(year,eachyear,china=affs)
data
barplot(data, las=2, ylim=c(0,10000), main="Number of PubMed articles \n which its title containing Meta analysis")
barplot(data[2,3], las=2, ylim=c(0,10000), main="Number of PubMed articles \n which its title containing Meta analysis")
barplot(data[3], las=2, ylim=c(0,500), main="Number of PubMed articles \n which its title containing Meta analysis")
datas<-data.frame(year,eachyear,china=affs)
class(datas)
class(datas$year)
class(datas$eachyear)
class(datas$china)
barplot(as.list(datas[,2:3]), las=2, ylim=c(0,500), main="Number of PubMed articles \n which its title containing Meta analysis")
datas<-data.frame(year,eachyear,china=as.numeric(affs))
datas
pro <- datas$china/datas$eachyear*100
pro
pro <-affs/eachyear*100
datas<-data.frame(year,eachyear,china=as.numeric(affs),pro)
datas
barplot(as.list(datas[,2:3]), las=2, ylim=c(0,1000), main="Number of PubMed articles \n which its title containing Meta analysis")
barplot(as.list(eachyear,affs), las=2, ylim=c(0,1000), main="Number of PubMed articles \n which its title containing Meta analysis")
barplot(count, las=2, ylim=c(0,10000), main="Number of PubMed articles \n which its title containing Meta analysis")
barplot(count$eachyear, las=2, ylim=c(0,10000), main="Number of PubMed articles \n which its title containing Meta analysis")
barplot(pro, las=2, ylim=c(0,100), main="Number of PubMed articles \n which its title containing Meta analysis")
barplot(pro, las=2, ylim=c(0,10), main="Number of PubMed articles \n which its title containing Meta analysis")
barplot(count$eachyear, las=2, ylim=c(0,10000), main="Number of PubMed articles \n which its title containing Meta analysis")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
barplot(count$eachyear, las=2, ylim=c(0,10000), main="Number of PubMed articles \n which its title containing Meta analysis")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = eachyear,cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= eachyear+10)
barplot(count$eachyear, las=2, ylim=c(0,10000), main="Number of PubMed articles \n which its title containing Meta analysis")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = eachyear,cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= eachyear+100)
barplot(count$eachyear, las=2, ylim=c(0,10000), main="Number of PubMed articles \n which its title containing Meta analysis")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = eachyear,cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= eachyear+1000)
barplot(count$eachyear, las=2, ylim=c(0,12000), main="Number of PubMed articles \n which its title containing Meta analysis")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = eachyear,cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= eachyear+1000)
barplot(count$eachyear, las=2, ylim=c(0,11000), main="Number of PubMed articles \n which its title containing Meta analysis")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = eachyear,cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= eachyear+1000)
barplot(count$eachyear, las=2, ylim=c(0,11000), main="Number of PubMed articles \n which its title containing Meta analysis")
axis(1,seq(from = 0.7,by = 1, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = eachyear,cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= eachyear+1000)
barplot(count$eachyear, las=2, ylim=c(0,11000), main="Number of PubMed articles \n which its title containing Meta analysis")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = eachyear,cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= eachyear+1000)
barplot(pro, las=2, ylim=c(0,10), main="Percentage of Meta analysis which come from China")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = paste(round(pro,2),"%",sep = ""),cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= pro+0.2)
barplot(pro, las=2, ylim=c(0,10), main="Percentage of Meta analysis which come from China")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = paste(round(pro,2),"%",sep = ""),cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= pro+0.3)
barplot(pro, las=2, ylim=c(0,10), main="Percentage of Meta analysis which come from China")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = paste(round(pro,2),"%",sep = ""),cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= pro+0.4)
barplot(pro, las=2, ylim=c(0,10), main="Percentage of Meta analysis which come from China")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = paste(round(pro,2),"%",sep = ""),cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= pro+0.5)
barplot(pro, las=2, ylim=c(0,10),ylab = "%", main="Percentage of Meta analysis which come from China")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = paste(round(pro,2),"%",sep = ""),cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= pro+0.5)
barplot(pro, las=2, ylim=c(0,10),ylab = "percentage", main="Percentage of Meta analysis which come from China")
barplot(pro, las=2, ylim=c(0,10),ylab = "percentage(%)", main="Percentage of Meta analysis which come from China")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = paste(round(pro,2),"%",sep = ""),cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= pro+0.5)
affs
table(datas)
names(affs)<- 2000:2015
affs
table(affs)
barplot(count$eachyear, las=2, ylim=c(0,11000), main="Number of PubMed articles \n which its title containing Meta analysis")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = eachyear,cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= eachyear+1000)
barplot(pro, las=2, ylim=c(0,10),ylab = "percentage(%)", main="Percentage of Meta analysis which come from China")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = paste(round(pro,2),"%",sep = ""),cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= pro+0.5)
library(wordcloud)
library(wordcloud)
res2 <- EUtilsSummary("Meta analysis[ti]",type = "esearch",db="pubmed",reldate=30)
EUtilsGet(res2)
QueryCount(EUtilsGet(res2))
Author(EUtilsGet(res2))
QueryCount(EUtilsGet(res2))
QueryId(res2)
res2 <- EUtilsSummary("Meta analysis[ti]",type = "esearch",db="pubmed",reldate=7)
QueryId(res2)
res2 <- EUtilsSummary("Wenhua Yu[au]",type = "esearch",db="pubmed",mindate= 2013,maxdate=2015)
summary(res2)
Affiliation(EUtilsGet(res2))
grepl("Tianjin",Affiliation(EUtilsGet(r)))
grepl("Tianjin",Affiliation(EUtilsGet(res2)))
index <- grepl("Tianjin",Affiliation(EUtilsGet(res2)))
res2[index]
ArticleId(EUtilsGet(res2))
res2 <- EUtilsSummary("Wenhua Yu[au] Tianjin",type = "esearch",db="pubmed",mindate= 2013,maxdate=2015)
Summary(res2)
summary(res2)
Title(EUtilsGet(res2))
ArticleTitle(EUtilsGet(res2))
library(wordcloud)
Abstract<- AbstractText(EUtilsGet(res2))
articles<-data.frame(Abstract))
articles<-data.frame(Abstract)
abstracts<-as.character(articles$Abstract)
abstracts<-paste(abstracts, sep="", collapse="")
wordcloud(abstracts, min.freq=10, max.words=70, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=10, max.words=500, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=10, max.words=1000, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=5, max.words=1000, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=3, max.words=1000, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=4, max.words=500, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=5, max.words=500, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=8, max.words=500, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=8, max.words=1000, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=7, max.words=1000, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=6, max.words=1000, colors=brewer.pal(7,"Dark2")
wordcloud(abstracts, min.freq=6, max.words=1000, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=5, max.words=1000, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=5, max.words=500, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=5, max.words=1000, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=4, max.words=1000, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=4, max.words=500, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=3, max.words=500, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=3, max.words=1000, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=3, max.words=500, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=4, max.words=500, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, min.freq=3, max.words=500, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts, colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts,max.words=500,
min.freq = 10 colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts,max.words=500,
min.freq = 10,colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts,max.words=500,
min.freq = 5,colors=brewer.pal(7,"Dark2"))
wordcloud(abstracts,colors=brewer.pal(7,"Dark2"))
sum(eachyear)
affs
library(RISmed)
barplot(pro, las=2, ylim=c(0,10),ylab = "percentage(%)", main="Percentage of Meta analysis which come from China")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = paste(round(pro,2),"%",sep = ""),cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= pro+0.5)
barplot(affs, las=2, ylim=c(0,500), main="Number of Meta analysis articles \n in PubMed which come from China ")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = eachyear,cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= affs+50)
barplot(affs, las=2, ylim=c(0,500), main="Number of Meta analysis articles \n in PubMed which come from China ")
text(labels = eachyear,cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= affs+100)
barplot(affs, las=2, ylim=c(0,500), main="Number of Meta analysis articles \n in PubMed which come from China ")
text(labels = eachyear,cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= affs+50)
barplot(affs, las=2, ylim=c(0,500), main="Number of Meta analysis articles \n in PubMed which come from China ")
text(labels = affs,cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= affs+50)
barplot(count$eachyear, las=2, ylim=c(0,11000), main="Number of PubMed articles \n which its title containing Meta analysis")
text(labels = eachyear,cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= eachyear+1000)
barplot(pro, las=2, ylim=c(0,10),ylab = "percentage(%)", main="Percentage of Meta analysis which come from China")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = paste(round(pro,2),"%",sep = ""),cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= pro+0.5)
barplot(pro, las=2, ylim=c(0,10),ylab = "percentage(%)", main="Percentage of Meta analysis \n which come from China")
axis(1,seq(from = 0.7,by = 1.2, length.out = 16),labels = year,tick = FALSE,cex.axis = 0.8)
text(labels = paste(round(pro,2),"%",sep = ""),cex = 0.7,x = seq(from = 0.7,by =1.2,length.out = 16),y= pro+0.5)
hcc <- c(166,47)
hbv <- c(129,73)
data <- data.frame(hcc,hbv,row.names = c("male","female"))
data
table(data)
fisher.test(data)
chisq.test(data)
install.packages("Rweibo", repos = "http://jliblog.com/cran")
library(rJava)
install.packages("rjava")
install.packages("rJava")
library(rJava)
library(rJava)
library(rJava)
library(rJava)
Sys.setenv(JAVA_HOME="C:\Program Files (x86)\Java\jdk1.8.0_71\jre")
Sys.setenv(JAVA_HOME="C:/Program Files (x86)/Java/jdk1.8.0_71/jre")
library(rJava)
library(rJava)
Sys.setenv(JAVA_HOME="C:/Program Files (x86)/Java/jdk1.8.0_71/jre")
library(ReporteRs)
Sys.setenv(JAVA_HOME="C:/Program Files (x86)/Java/jdk1.8.0_71/jre")
library(rJava)
library(xlsx)
library(xlsx)
library(RISmed)
library(pander)
library(pander)
m <- data.frame(a = c(1, -500, 10320, 23, 77),
b = runif(5),
c = c('a', 'bb', 'ccc', 'dddd', 'eeeee'))
pandoc.table(m)
pandoc.table(m, justify = c('right', 'left', 'centre'))
pandoc.table(m, justify = 'rlc') # Same as upper statement
pandoc.table(mtcars)
pandoc.table(mtcars, caption = 'Only once after the first part!')
t <- data.frame(a = c('hundreds\nof\nmouses', '3 cats'), b=c('FOO is nice', 'BAR\nBAR2'))
t
pandoc.table(t)
pandoc.table(t, split.cells = 5)
pandoc.table(m)
pandoc.table(m, style = "grid")
pandoc.table(m, style = "simple")
pandoc.table(t, style = "grid")
pandoc.table(t, style = "grid", split.cells = 5)
pandoc.table(t, style = "grid", split.cells = 7)
pandoc.table(t, style = "grid", split.cells = 3)
t <- mtcars[1:3, 1:5]
t
pandoc.table(t$mpg, emphasize.italics.cells = 1)
pandoc.table(t$mpg, emphasize.strong.cells = 1)
pandoc.table(t, emphasize.italics.cells = 1:2)
pandoc.table(t$disp, emphasize.italics.cells = 1:2)
pandoc.table(t, emphasize.verbatim.cells = which(t == 6, arr.ind = TRUE),
emphasize.italics.rows = 1)
emphasize.cols(1)
pandoc.table(mtcars[1:3, 1:3], plain.ascii = TRUE)
x <- data.frame(a="Pandoc\nPackage")
pandoc.table(x, keep.line.breaks = TRUE)
pandoc.table(x)
x <- data.frame(a = "foo bar", b = "foo bar")
x
pandoc.table(x, split.cells = 4)
pandoc.table(x, split.cells = 7)
pandoc.table(x, split.cells = c(4, 7))
library(survival)
data("veteran")
head(veteran)
help(veteran,package = "survival")
fit <- coxph(Surv(time,status)~ age + celltype + prior + karno + diagtime + trt, data=veteran)
summary(fit)
library(pander)
pander(fit)
pander(fit,justfy="left",style="simple")
install.packages("broom")
library(broom)
tidy(fit)
glance(fit)
table1 <- tidy(fit)
View(table1)
library(dplyr)
names(table1)
table1 %>%
filter(p.value < 0.05) %>%
mutate(HR = exp(estimate),Lower= exp(conf.low),Hight= exp(conf.high)) %>%
select(term,HR,Lower,Hight,p.value)
?unite
table1
table2 <- table1 %>%
filter(p.value < 0.05) %>%
mutate(HR = exp(estimate),Lower= exp(conf.low),Hight= exp(conf.high)) %>%
select(term,HR,Lower,Hight,p.value)
table2
pander(table2,justfy="left",style="simple")
library(ReporteRs)
library(ReporteRs)
library(magrittr)
setwd("C:/Users/HP/Desktop/datasciences/Rmarkdown")
docx( ) %>%
addFlexTable(table2 %>%
FlexTable(header.cell.props = cellProperties( background.color = "#003366"),
header.text.props = textBold(color = "white"),
add.rownames = TRUE ) %>%
setZebraStyle(odd = "#DDDDDD", even = "#FFFFFF")) %>%
writeDoc(file = "table2.docx")
head(veteran)
test_name <- names(veteran)
names(veteran)
library(tableone)
test_name <- names(veteran)
listvars <- test_name[-1]
catVars <- test_name[c(1,2,4,8)]
table1 <- CreateTableOne(vars = listvars,strata = c("trt"),
factorVars = catVars,data = veteran)
table1
table1 <- print(table1)
str(veteran)
veteran$trt <- factor(veteran$trt,labels = c("standard","test"))
varsToFactor <- c("celltype","status","prior")
veteran[varsToFactor] <- lapply(veteran[varsToFactor], factor)
str(veteran)
veteran$prior
labels(veteran$prior)
table1
summary(table1)
library(survival)
data(pbc)
head(pbc)
varsToFactor <- c("status","trt","ascites","hepato","spiders","edema","stage")
pbc[varsToFactor] <- lapply(pbc[varsToFactor], factor)
str(pbc)
dput(names(pbc))
tableOne <- CreateTableOne(vars = vars, strata = c("trt"), data = pbc)
vars <- c("time","status","age","sex","ascites","hepato",
"spiders","edema","bili","chol","albumin",
"copper","alk.phos","ast","trig","platelet",
"protime","stage")
tableOne <- CreateTableOne(vars = vars, strata = c("trt"), data = pbc)
tableOne
print(tableOne, nonnormal = c("bili","chol","copper","alk.phos","trig"),
exact = c("status","stage"), cramVars = "hepato", smd = TRUE)
summary(tableOne)
tableOne$CatTable
summary(tableOne$CatTable)
print(tableOne, nonnormal = c("bili","chol","copper","alk.phos","trig"),
exact = c("status","stage"), quote = TRUE)
print(tableOne, nonnormal = c("bili","chol","copper","alk.phos","trig"),
exact = c("status","stage"), quote = TRUE, noSpaces = TRUE)
ExtractSmd(tableOne)
print(tableOne, nonnormal = c("bili","chol","copper","alk.phos","trig"),
exact = c("status","stage"), cramVars = "hepato", smd = TRUE)
library(survival)
data(pbc)
head(pbc)
str(pbc)
library(tableone)
tableOne <- CreateTableOne(vars = vars, strata = c("trt"), data = pbc)
tableOne
tableOne
varsToFactor <- c("status","trt","ascites","hepato","spiders","edema","stage")
pbc[varsToFactor] <- lapply(pbc[varsToFactor], factor)
dput(names(pbc))
vars <- c("time","status","age","sex","ascites","hepato",
"spiders","edema","bili","chol","albumin",
"copper","alk.phos","ast","trig","platelet",
"protime","stage")
library(tableone)
tableOne <- CreateTableOne(vars = vars, strata = c("trt"), data = pbc)
tableOne
table1 <- print(tableOne, nonnormal = c("bili","chol","copper","alk.phos","trig"),
exact = c("status","stage"), cramVars = "hepato", smd = TRUE)
data(pbc)
## Make categorical variables factors
varsToFactor <- c("status","trt","ascites","hepato","spiders","edema","stage")
pbc[varsToFactor] <- lapply(pbc[varsToFactor], factor)
vars <- c("time","status","age","sex","ascites","hepato",
"spiders","edema","bili","chol","albumin",
"copper","alk.phos","ast","trig","platelet",
"protime","stage")
tableOne <- CreateTableOne(vars = vars, strata = c("trt"), data = pbc)
print(tableOne, nonnormal = c("bili","chol","copper","alk.phos","trig"),
exact = c("status","stage"), cramVars = "hepato", smd = TRUE)
table1 <- print(tableOne, nonnormal = c("bili","chol","copper","alk.phos","trig"),
exact = c("status","stage"), cramVars = "hepato", smd = TRUE)
summary(table1)
summary(tableOne)
pander(head(pbc))
library(pander)
pander(head(pbc))
str(pbc)
pander(str(pbc))
pander(str(pbc))
library(printr)
tableOne <- CreateTableOne(vars = vars, strata = c("trt"), data = pbc)
pander(tableOne)
gc()
table1 <- print(tableOne, nonnormal = c("bili","chol","copper","alk.phos","trig"),
exact = c("status","stage"), cramVars = "hepato", smd = TRUE)
library(tableone)
tableOne <- CreateTableOne(vars = vars, strata = c("trt"), data = pbc)
tableOne
tableOne
table1 <- print(tableOne)
setwd("F:/乐享数据DataScientists(data-sharing)/运用R创建table 1")
library(tableone)
tableOne <- CreateTableOne(vars = vars, strata = c("trt"), data = pbc)
table1 <- print(tableOne)
table1 <- print(tableOne)
# Load the packages
library(ReporteRs)
library(magrittr)
# The script
docx( ) %>%
addFlexTable(table1 %>%
FlexTable(header.cell.props = cellProperties( background.color = "#003366"),
header.text.props = textBold(color = "white"),
add.rownames = TRUE ) %>%
setZebraStyle(odd = "#DDDDDD", even = "#FFFFFF")) %>%
writeDoc(file = "table2.docx")
# open the Word doc
browseURL("table1.docx")
table1 <- print(tableOne, nonnormal = c("bili","chol","copper","alk.phos","trig"),
exact = c("status","stage"), cramVars = "hepato", smd = TRUE)
docx( ) %>%
addFlexTable(table1 %>%
FlexTable(header.cell.props = cellProperties( background.color = "#003366"),
header.text.props = textBold(color = "white"),
add.rownames = TRUE ) %>%
setZebraStyle(odd = "#DDDDDD", even = "#FFFFFF")) %>%
writeDoc(file = "table1.docx")
# open the Word doc
browseURL("table1.docx")
tableOne <- CreateTableOne(vars = vars, strata = c("trt"), data = pbc)
table1 <- print(tableOne)
table1 <- print(tableOne, nonnormal = c("bili","chol","copper","alk.phos","trig"),
exact = c("status","stage"), cramVars = "hepato", smd = TRUE)
summary(tableOne)
